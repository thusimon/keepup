{"version":3,"sources":["components/clock.js","components/page-header.js","components/task-card.js","utils/time.js","components/loading.js","components/empty-tasks.js","components/create-task.js","components/user-tasks.js","components/sign-up-page.js","components/statistics-page.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Clock","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","useState","Date","now","clock","setClock","useEffect","setInterval","className","xmlns","height","viewBox","width","d","fill","format","PageHeader","to","TaskCard","userId","taskId","taskTitle","signUps","disable","clz","msg","signState","setSignState","lastCheckTime","length","lastCheckTimeInt","parseInt","timeElaspsedInfo","time","isNaN","timeElapsed","Math","floor","days","getTimeElaspedFromNow","timeInToday","curTime","getFullYear","getMonth","getDate","getTime","isTimeInToday","onClick","formData","FormData","signedTime","append","fetch","method","body","then","resp","json","disabled","Loading","x","y","EmptyTasks","addTask","CreateTask","closeModel","inputEl","useRef","ref","placeholder","current","value","alert","UserTasks","userName","taskList","setTaskList","viewState","setViewState","getTasks","res","tasks","addTaskHandler","map","task","key","_id","title","sign_up","SignUpPage","users","setUsers","sort","user1","user2","user","name","Statistics","Main","exact","path","component","StatisticsPage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4844c893.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst Clock = () => {\r\n  const formatter = new Intl.DateTimeFormat('en-us', {\r\n    year: 'numeric',\r\n    month: 'numeric',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n    hour12: false\r\n  });\r\n\r\n  const [clock, setClock] = useState(new Date(Date.now()));\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setClock(new Date(Date.now()));\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <div className=\"clock\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n      </svg>\r\n      <span>{formatter.format(clock)}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Clock from './clock';\r\nimport './page-header.css'\r\n\r\nconst PageHeader = () => {\r\n  return (\r\n    <header className=\"page-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><Link to='/signup'>Sign Up</Link></li>\r\n          <li className=\"nav-seperator\"></li>\r\n          <li><Link to='/statistics'>Statistics</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <span>\r\n        <Clock />\r\n      </span>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PageHeader;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {isTimeInToday, getTimeElaspedFromNow} from '../utils/time';\r\nimport './task-card.css';\r\n\r\nconst TaskCard = ({userId, taskId, taskTitle, signUps}) => {\r\n  // lastCheckTime should UNIX time\r\n  const [signState, setSignState] = useState({\r\n    disable: true,\r\n    clz: 'new-task',\r\n    msg: ''\r\n  });\r\n  useEffect(() => {\r\n    const lastCheckTime = signUps.length > 0 ? signUps[signUps.length-1] : null;\r\n    const lastCheckTimeInt = parseInt(lastCheckTime);\r\n    const timeElaspsedInfo = getTimeElaspedFromNow(lastCheckTimeInt);\r\n    const timeInToday = isTimeInToday(lastCheckTimeInt)\r\n    if (timeInToday) {\r\n      // no lastCheckTime or lastCheckTime is before today, should enable check button\r\n      setSignState({\r\n        disable: true,\r\n        clz: timeElaspsedInfo.clz,\r\n        msg: timeElaspsedInfo.msg\r\n      });\r\n    } else {\r\n      // no lastCheckTime or lastCheckTime is before today, should enable check button\r\n      setSignState({\r\n        disable: false,\r\n        clz: timeElaspsedInfo.clz,\r\n        msg: timeElaspsedInfo.msg\r\n      });\r\n    }\r\n  }, [taskId, signUps]);\r\n  const onClickHandler = () => {\r\n    const formData = new FormData();\r\n    const signedTime = Date.now();\r\n    formData.append('task_id', taskId);\r\n    formData.append('time_stamp', signedTime);\r\n    fetch('/api/tasks', {\r\n      method: 'PATCH',\r\n      body: formData\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(() => {\r\n      // should disable the check button\r\n      setSignState({\r\n        disable: true,\r\n        clz: 'today',\r\n        msg: 'Just now'\r\n      });\r\n    });\r\n  }\r\n  return <div className=\"task-card\">\r\n    <div className={`task-info ${signState.clz}`}>\r\n      <div className=\"task-title\">{taskTitle}</div>\r\n      <div className=\"task-last-signed\">{`Last signed at: ${signState.msg}`}</div>\r\n    </div>\r\n    <div className=\"task-sign\">\r\n      <button onClick={onClickHandler} disabled={signState.disable}>Sign Up!</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default TaskCard;","const dayMS = 24*60*60*1000;\r\n\r\nexport const isTimeInToday = (time) => {\r\n  if (isNaN(time)) {\r\n    return false;\r\n  }\r\n  const curTime = new Date(Date.now());\r\n  const todayStart = new Date(curTime.getFullYear(), curTime.getMonth(), curTime.getDate()).getTime()\r\n  return time > todayStart;\r\n}\r\n\r\nexport const getTimeElaspedFromNow = (time) => {\r\n  if (isNaN(time)) {\r\n    return {\r\n      clz: 'new-task',\r\n      msg: 'New Task'\r\n    };\r\n  }\r\n  const curTime = Date.now();\r\n  const timeElapsed = curTime - time;\r\n  if (timeElapsed < 60000) {\r\n    // within 1 min\r\n    return {\r\n      clz: 'today',\r\n      msg: 'Just now'\r\n    };\r\n  } else if (timeElapsed < 60 * 60000) {\r\n    return {\r\n      clz: 'today',\r\n      msg: `${Math.floor(timeElapsed/60000)} mins ago`\r\n    };\r\n  } else if (timeElapsed < 120 * 60000) {\r\n    return {\r\n      clz: 'today',\r\n      msg: `1 hour ago`\r\n    };\r\n  } else if (timeElapsed < dayMS) {\r\n    return {\r\n      clz: 'today',\r\n      msg: `${Math.floor(timeElapsed/3600000)} hours ago`\r\n    }\r\n  } else {\r\n    const days = Math.floor(timeElapsed/dayMS);\r\n    if (days === 1) {\r\n      return {\r\n        clz: 'days-ago-2',\r\n        msg: '1 day ago'\r\n      }\r\n    } else if (days <= 2) {\r\n      return {\r\n        clz: 'days-ago-2',\r\n        msg: `${days} days ago`\r\n      }\r\n    } else if (days <= 7) {\r\n      return {\r\n        clz: 'days-ago-7',\r\n        msg: `${days} days ago`\r\n      }\r\n    } else {\r\n      return {\r\n        clz: 'days-ago-30',\r\n        msg: `${days} days ago`\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\">\r\n        <g>\r\n          <g>\r\n            <path d=\"M990,515.8c-1.3-66-15.6-131.9-42.1-192.1c-26.4-60.3-64.7-114.8-111.7-159.9c-47-45.1-102.7-80.8-163-104.4c-60.3-23.6-125-34.9-189.1-33.6c-64,1.3-127.8,15.2-186,40.9c-58.3,25.6-111.2,62.7-154.8,108.2c-43.7,45.5-78.2,99.5-100.9,157.8c-22.8,58.3-33.7,121-32.3,183c1.3,62,14.8,123.6,39.6,180c24.8,56.4,60.7,107.5,104.8,149.7c44.1,42.2,96.3,75.6,152.7,97.5c56.4,22,117,32.5,177,31.1c60-1.3,119.5-14.4,173.9-38.4c54.5-24,103.8-58.8,144.6-101.4c40.8-42.6,72.9-93.1,94.1-147.6c12.9-33,21.6-67.6,26.2-102.5c1.2,0.1,2.5,0.1,3.7,0.1c34.9,0,63.2-28.3,63.2-63.2c0-1.8-0.1-3.5-0.2-5.3L990,515.8L990,515.8z M889.5,683.7c-23.2,52.6-56.8,100.2-98,139.5c-41.2,39.3-89.9,70.3-142.5,90.7c-52.6,20.4-108.9,30.1-164.8,28.7c-55.9-1.3-111.2-13.6-161.8-36c-50.6-22.4-96.5-54.8-134.3-94.5c-37.9-39.7-67.7-86.7-87.2-137.4C81.2,623.9,72,569.7,73.3,515.8c1.3-53.9,13.2-107.1,34.8-155.8c21.6-48.7,52.8-92.8,91.1-129.2c38.3-36.4,83.5-65.1,132.2-83.8c48.7-18.8,100.9-27.7,152.7-26.3c51.9,1.3,103,12.8,149.7,33.6c46.8,20.8,89.2,50.9,124.1,87.7c35,36.8,62.4,80.3,80.4,127.1c18,46.8,26.5,96.9,25.1,146.7h0.2c-0.1,1.7-0.2,3.5-0.2,5.3c0,32.6,24.7,59.4,56.4,62.8C913.8,618.3,903.6,651.9,889.5,683.7L889.5,683.7z\"/>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport './empty-tasks.css';\r\n\r\nconst EmptyTasks = ({addTask}) => {\r\n  const addTaskHandler = () => {\r\n    addTask();\r\n  }\r\n  return (\r\n    <div className=\"empty-tasks\">\r\n      <div className=\"message\">\r\n        <span>Click</span>\r\n        <span className=\"add-task-btn\" onClick={addTaskHandler}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\r\n          </svg>\r\n        </span>\r\n        <span>to create a daily task</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyTasks;","import React, {useRef} from 'react';\r\nimport './create-task.css';\r\n\r\nconst CreateTask = ({userId, closeModel}) => {\r\n  const inputEl = useRef(null);\r\n  const cancelBtnHander = () => {\r\n    closeModel(false);\r\n  }\r\n  const submitBtnHander = () => {\r\n    const taskTitle = inputEl.current.value\r\n    if (taskTitle) {\r\n      const formData = new FormData();\r\n      formData.append('user', userId);\r\n      formData.append('title', taskTitle);\r\n      fetch('/api/tasks', {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      .then(resp => resp.json())\r\n      .then(() => {\r\n        closeModel(true);\r\n      });\r\n    } else {\r\n      alert('Please provide brief task title');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"create-task\">\r\n      <div className=\"task-name\">\r\n        <label>Task Name</label>\r\n        <input ref={inputEl} placeholder=\"Briefly name your task here\"></input>\r\n      </div>\r\n      <div className=\"task-btns\">\r\n        <button className=\"secondary\" onClick={cancelBtnHander}>Cancel</button>\r\n        <button className=\"primary\" onClick={submitBtnHander}>Create</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, {useState, useEffect} from 'react';\r\nimport TaskCard from './task-card';\r\nimport Loading from './loading';\r\nimport EmptyTasks from './empty-tasks';\r\nimport CreateTask from './create-task';\r\nimport './user-tasks.css';\r\n\r\nconst UserTasks = ({userName, userId}) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  // 0: loading, 1 show list, 2 show create modal \r\n  const [viewState, setViewState] = useState(0);\r\n  const getTasks = (userId) => {\r\n    fetch(`/api/tasks?userId=${userId}`)\r\n    .then(res => res.json())\r\n    .then(tasks => {\r\n      setTaskList(tasks);\r\n      setViewState(1)\r\n    });\r\n  }\r\n  useEffect(()=> {\r\n    getTasks(userId);\r\n  }, [userId]);\r\n  \r\n  const addTaskHandler = () => {\r\n    setViewState(2);\r\n  }\r\n\r\n  const closeModel = () => {\r\n    setViewState(0);\r\n    getTasks(userId);\r\n  }\r\n\r\n  const mainDisplay = () => {\r\n    if (viewState === 0) {\r\n      return <Loading />\r\n    } else if (viewState === 1) {\r\n      return taskList && taskList.length > 0 ?\r\n      taskList.map(task => {\r\n        return <TaskCard key={task._id} userId={userId} taskId={task._id} taskTitle={task.title} signUps={task.sign_up} />\r\n      }) :\r\n      <EmptyTasks addTask={addTaskHandler} />\r\n    } else {\r\n      return <CreateTask userId={userId} closeModel={closeModel} />\r\n    }\r\n  }\r\n  return (<div className=\"user-tasks\">\r\n    <div className=\"name-badge\">\r\n      <span className=\"profile\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\r\n        </svg>\r\n        <span>{userName}</span>\r\n      </span>\r\n      <span className=\"add-task-btn\" onClick={addTaskHandler}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n    <div className=\"tasks\">\r\n      {mainDisplay()}\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default UserTasks;","import React, {useState, useEffect} from 'react';\r\nimport UserTasks from './user-tasks';\r\n\r\nconst SignUpPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(()=> {\r\n    fetch('/api/users')\r\n    .then(res => res.json())\r\n    .then(users => {\r\n      users.sort((user1, user2) => user1.sort - user2.sort);\r\n      setUsers(users);\r\n    })\r\n  }, [])\r\n  return <div>\r\n    {\r\n      users.map(user => {\r\n        return <UserTasks key={user._id} userName={user.name} userId={user._id} />\r\n      })\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default SignUpPage;","import React from 'react';\r\n\r\nconst Statistics = () => {\r\n  return <div>\r\n    Coming soon...\r\n  </div>\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport SignUpPage from './sign-up-page';\r\nimport StatisticsPage from './statistics-page';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={SignUpPage}/>\r\n        <Route path='/signup' component={SignUpPage}/>\r\n        <Route path='/statistics' component={StatisticsPage}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport PageHeader from './components/page-header';\nimport Main from './components/main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <PageHeader />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}