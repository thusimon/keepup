{"version":3,"sources":["components/clock.js","components/page-header.js","utils/time.js","components/task-card.js","components/loading.js","components/empty-tasks.js","components/create-task.js","components/user-tasks.js","components/sign-up-page.js","components/empty-charts.js","components/charts/bar-chart.js","components/task-chart.js","components/user-charts.js","components/statistics-page.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Clock","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hourCycle","useState","Date","now","clock","setClock","useEffect","setInterval","className","xmlns","height","viewBox","width","d","fill","format","PageHeader","to","dayMS","getTodayStart","curTime","getFullYear","getMonth","getDate","getTime","getSignUpRate","taskList","backToDays","startTodayTime","searchToTime","map","task","signUps","sign_up","filter","s","data","length","range","name","title","createdTime","createdAt","daysFromCreated","Math","floor","TaskCard","userId","taskId","taskTitle","disable","clz","msg","signState","setSignState","time","lastCheckTime","lastCheckTimeInt","parseInt","timeElaspsedInfo","isNaN","timeElapsed","days","getTimeElaspedFromNow","timeInToday","onClick","formData","FormData","signedTime","append","fetch","method","body","then","resp","json","disabled","Loading","x","y","EmptyTasks","addTask","CreateTask","closeModel","inputEl","useRef","ref","placeholder","current","value","alert","UserTasks","userName","setTaskList","viewState","setViewState","getTasks","res","tasks","addTaskHandler","key","_id","SignUpPage","users","setUsers","sort","user1","user2","user","EmptyChart","updateTask","viewData","config","svg","names","vd","margin","cw","left","right","ch","top","bottom","xScale","d3","domain","paddingInner","paddingOuter","yScale","t","transition","duration","xAxisCall","yAxisCall","ticks","tickFormat","toFixed","selectAll","call","attr","colorScale","join","enter","text","bandwidth","update","exit","remove","i","TaskChart","chartAreaId","setConfig","setSVG","chartRef","chartE","containerId","clientWidth","clientHeight","drawTask","onChange","evt","taskRange","target","selected","id","UserCharts","StatisticsPage","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f1135a6a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst Clock = () => {\r\n  const formatter = new Intl.DateTimeFormat('en-us', {\r\n    year: 'numeric',\r\n    month: 'numeric',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n    hourCycle: 'h23'\r\n  });\r\n\r\n  const [clock, setClock] = useState(new Date(Date.now()));\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setClock(new Date(Date.now()));\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <div className=\"clock\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n      </svg>\r\n      <span>{formatter.format(clock)}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Clock from './clock';\r\nimport './page-header.css'\r\n\r\nconst PageHeader = () => {\r\n  return (\r\n    <header className=\"page-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><Link to='/signup'>Sign Up</Link></li>\r\n          <li className=\"nav-seperator\"></li>\r\n          <li><Link to='/statistics'>Statistics</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <span>\r\n        <Clock />\r\n      </span>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PageHeader;\r\n","import {WEEKDAY} from './date';\r\n\r\nconst dayMS = 24*60*60*1000;\r\n\r\nexport const getTodayStart = () => {\r\n  const curTime = new Date(Date.now());\r\n  return new Date(curTime.getFullYear(), curTime.getMonth(), curTime.getDate()).getTime();\r\n}\r\n\r\nexport const isTimeInToday = (time) => {\r\n  if (isNaN(time)) {\r\n    return false;\r\n  }\r\n  const todayStart = getTodayStart();\r\n  return time > todayStart;\r\n}\r\n\r\nexport const getTimeElaspedFromNow = (time) => {\r\n  if (isNaN(time)) {\r\n    return {\r\n      clz: 'new-task',\r\n      msg: 'New Task'\r\n    };\r\n  }\r\n  const curTime = Date.now();\r\n  const timeElapsed = curTime - time;\r\n  if (timeElapsed < 60000) {\r\n    // within 1 min\r\n    return {\r\n      clz: 'today',\r\n      msg: 'Just now'\r\n    };\r\n  } else if (timeElapsed < 60 * 60000) {\r\n    return {\r\n      clz: 'today',\r\n      msg: `${Math.floor(timeElapsed/60000)} mins ago`\r\n    };\r\n  } else if (timeElapsed < 120 * 60000) {\r\n    return {\r\n      clz: 'today',\r\n      msg: `1 hour ago`\r\n    };\r\n  } else if (timeElapsed < dayMS) {\r\n    return {\r\n      clz: 'today',\r\n      msg: `${Math.floor(timeElapsed/3600000)} hours ago`\r\n    }\r\n  } else {\r\n    const days = Math.floor(timeElapsed/dayMS);\r\n    if (days === 1) {\r\n      return {\r\n        clz: 'days-ago-1',\r\n        msg: '1 day ago'\r\n      }\r\n    } else if (days <= 2) {\r\n      return {\r\n        clz: 'days-ago-2',\r\n        msg: `${days} days ago`\r\n      }\r\n    } else if (days <= 7) {\r\n      return {\r\n        clz: 'days-ago-7',\r\n        msg: `${days} days ago`\r\n      }\r\n    } else {\r\n      return {\r\n        clz: 'days-ago-30',\r\n        msg: `${days} days ago`\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWeek = () => {\r\n  const curTime = new Date(Date.now());\r\n  const todayStart = new Date(curTime.getFullYear(), curTime.getMonth(), curTime.getDate()).getTime();\r\n  const todayDayOfWeek = curTime.getDay();\r\n  const weekStart = todayStart - todayDayOfWeek*dayMS;\r\n  const currentWeek = [];\r\n  for (let day = 0; day < 7; day++) {\r\n    currentWeek.push(weekStart + day*dayMS)\r\n  }\r\n  return currentWeek;\r\n}\r\n\r\n\r\nexport const isDayInSignUps = (day, signUps) => {\r\n  const signUpInDay = signUps.filter(signUp => {\r\n    return signUp >= day && signUp <= day + dayMS;\r\n  });\r\n  return signUpInDay.length > 0;\r\n}\r\n\r\nexport const mapSignUpToWeekly = (title, signUps, week, todayStart) => {\r\n  return week.map((weekDay, idx) => {\r\n    const isSigned = isDayInSignUps(weekDay, signUps);\r\n    const weekDayPassed = weekDay <= todayStart;\r\n    const dayName = WEEKDAY[idx];\r\n    let weekDayView = 0;\r\n    // signed 1, not signed 0, future day -1;\r\n    if (isSigned) {\r\n      weekDayView = 1;\r\n    } else if (weekDayPassed) {\r\n      weekDayView = 0;\r\n    } else {\r\n      weekDayView = -1;\r\n    }\r\n    return {\r\n      weekDayView,\r\n      weekDay,\r\n      dayName,\r\n      title\r\n    };\r\n  });\r\n}\r\n\r\nexport const getTaskWeeklyViewData = (taskList) => {\r\n  const currentWeek = getCurrentWeek();\r\n  const todayStart = getTodayStart();\r\n  return taskList.map(task => {\r\n    task.weekView = mapSignUpToWeekly(task.title, task.sign_up, currentWeek, todayStart);\r\n    return task;\r\n  });\r\n}\r\n\r\nexport const getSignUpRate = (taskList, backToDays) => {\r\n  const startTodayTime = getTodayStart();\r\n  if (backToDays > 0) {\r\n    const searchToTime = startTodayTime - dayMS * backToDays;\r\n    return taskList.map(task => {\r\n      const signUps = task.sign_up.filter(s => s >= searchToTime);\r\n      task.data = signUps.length / backToDays;\r\n      task.range = [searchToTime, startTodayTime];\r\n      task.name = task.title;\r\n      return task;\r\n    });\r\n  } else {\r\n    // find the day the task is created\r\n    return taskList.map(task => {\r\n      const createdTime = task.createdAt;\r\n      let daysFromCreated = Math.floor((startTodayTime - createdTime) / dayMS);\r\n      daysFromCreated = daysFromCreated > 0 ? daysFromCreated : 1;\r\n      task.data = task.sign_up.length / daysFromCreated;\r\n      task.range = [createdTime, startTodayTime];\r\n      task.name = task.title;\r\n      return task;\r\n    });\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {isTimeInToday, getTimeElaspedFromNow} from '../utils/time';\r\nimport './task-card.css';\r\n\r\nconst TaskCard = ({userId, taskId, taskTitle, signUps}) => {\r\n  // lastCheckTime should UNIX time\r\n  const [signState, setSignState] = useState({\r\n    disable: true,\r\n    clz: 'new-task',\r\n    msg: ''\r\n  });\r\n  useEffect(() => {\r\n    const lastCheckTime = signUps.length > 0 ? signUps[signUps.length-1] : null;\r\n    const lastCheckTimeInt = parseInt(lastCheckTime);\r\n    const timeElaspsedInfo = getTimeElaspedFromNow(lastCheckTimeInt);\r\n    const timeInToday = isTimeInToday(lastCheckTimeInt)\r\n    if (timeInToday) {\r\n      // no lastCheckTime or lastCheckTime is before today, should enable check button\r\n      setSignState({\r\n        disable: true,\r\n        clz: timeElaspsedInfo.clz,\r\n        msg: timeElaspsedInfo.msg\r\n      });\r\n    } else {\r\n      // no lastCheckTime or lastCheckTime is before today, should enable check button\r\n      setSignState({\r\n        disable: false,\r\n        clz: timeElaspsedInfo.clz,\r\n        msg: timeElaspsedInfo.msg\r\n      });\r\n    }\r\n  }, [taskId, signUps]);\r\n  const onClickHandler = () => {\r\n    const formData = new FormData();\r\n    const signedTime = Date.now();\r\n    formData.append('task_id', taskId);\r\n    formData.append('time_stamp', signedTime);\r\n    fetch('/api/tasks', {\r\n      method: 'PATCH',\r\n      body: formData\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(() => {\r\n      // should disable the check button\r\n      setSignState({\r\n        disable: true,\r\n        clz: 'today',\r\n        msg: 'Just now'\r\n      });\r\n    });\r\n  }\r\n  return <div className=\"task-card\">\r\n    <div className={`task-info ${signState.clz}`}>\r\n      <div className=\"task-title\">{taskTitle}</div>\r\n      <div className=\"task-last-signed\">{`Last signed at: ${signState.msg}`}</div>\r\n    </div>\r\n    <div className=\"task-sign\">\r\n      <button onClick={onClickHandler} disabled={signState.disable} \r\n              title={signState.disable ? 'Already signed up, come tomorrow' : 'Sign up today!'}>\r\n        Sign Up!\r\n      </button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default TaskCard;","import React from 'react';\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\">\r\n        <g>\r\n          <g>\r\n            <path d=\"M990,515.8c-1.3-66-15.6-131.9-42.1-192.1c-26.4-60.3-64.7-114.8-111.7-159.9c-47-45.1-102.7-80.8-163-104.4c-60.3-23.6-125-34.9-189.1-33.6c-64,1.3-127.8,15.2-186,40.9c-58.3,25.6-111.2,62.7-154.8,108.2c-43.7,45.5-78.2,99.5-100.9,157.8c-22.8,58.3-33.7,121-32.3,183c1.3,62,14.8,123.6,39.6,180c24.8,56.4,60.7,107.5,104.8,149.7c44.1,42.2,96.3,75.6,152.7,97.5c56.4,22,117,32.5,177,31.1c60-1.3,119.5-14.4,173.9-38.4c54.5-24,103.8-58.8,144.6-101.4c40.8-42.6,72.9-93.1,94.1-147.6c12.9-33,21.6-67.6,26.2-102.5c1.2,0.1,2.5,0.1,3.7,0.1c34.9,0,63.2-28.3,63.2-63.2c0-1.8-0.1-3.5-0.2-5.3L990,515.8L990,515.8z M889.5,683.7c-23.2,52.6-56.8,100.2-98,139.5c-41.2,39.3-89.9,70.3-142.5,90.7c-52.6,20.4-108.9,30.1-164.8,28.7c-55.9-1.3-111.2-13.6-161.8-36c-50.6-22.4-96.5-54.8-134.3-94.5c-37.9-39.7-67.7-86.7-87.2-137.4C81.2,623.9,72,569.7,73.3,515.8c1.3-53.9,13.2-107.1,34.8-155.8c21.6-48.7,52.8-92.8,91.1-129.2c38.3-36.4,83.5-65.1,132.2-83.8c48.7-18.8,100.9-27.7,152.7-26.3c51.9,1.3,103,12.8,149.7,33.6c46.8,20.8,89.2,50.9,124.1,87.7c35,36.8,62.4,80.3,80.4,127.1c18,46.8,26.5,96.9,25.1,146.7h0.2c-0.1,1.7-0.2,3.5-0.2,5.3c0,32.6,24.7,59.4,56.4,62.8C913.8,618.3,903.6,651.9,889.5,683.7L889.5,683.7z\"/>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport './empty-tasks.css';\r\n\r\nconst EmptyTasks = ({addTask}) => {\r\n  const addTaskHandler = () => {\r\n    addTask();\r\n  }\r\n  return (\r\n    <div className=\"empty-tasks\">\r\n      <div className=\"message\">\r\n        <span>Click</span>\r\n        <span className=\"add-task-btn\" onClick={addTaskHandler}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\r\n          </svg>\r\n        </span>\r\n        <span>to create a daily task</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyTasks;","import React, {useRef} from 'react';\r\nimport './create-task.css';\r\n\r\nconst CreateTask = ({userId, closeModel}) => {\r\n  const inputEl = useRef(null);\r\n  const cancelBtnHander = () => {\r\n    closeModel(false);\r\n  }\r\n  const submitBtnHander = () => {\r\n    const taskTitle = inputEl.current.value\r\n    if (taskTitle) {\r\n      const formData = new FormData();\r\n      formData.append('user', userId);\r\n      formData.append('title', taskTitle);\r\n      fetch('/api/tasks', {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      .then(resp => resp.json())\r\n      .then(() => {\r\n        closeModel(true);\r\n      });\r\n    } else {\r\n      alert('Please provide brief task title');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"create-task\">\r\n      <div className=\"task-name\">\r\n        <label>Task Name</label>\r\n        <input ref={inputEl} placeholder=\"Briefly name your task here\"></input>\r\n      </div>\r\n      <div className=\"task-btns\">\r\n        <button className=\"secondary\" onClick={cancelBtnHander}>Cancel</button>\r\n        <button className=\"primary\" onClick={submitBtnHander}>Create</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, {useState, useEffect} from 'react';\r\nimport TaskCard from './task-card';\r\nimport Loading from './loading';\r\nimport EmptyTasks from './empty-tasks';\r\nimport CreateTask from './create-task';\r\nimport './user-tasks.css';\r\n\r\nconst UserTasks = ({userName, userId}) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  // 0: loading, 1 show list, 2 show create modal \r\n  const [viewState, setViewState] = useState(0);\r\n  const getTasks = (userId) => {\r\n    fetch(`/api/tasks?userId=${userId}`)\r\n    .then(res => res.json())\r\n    .then(tasks => {\r\n      setTaskList(tasks);\r\n      setViewState(1)\r\n    });\r\n  }\r\n  useEffect(()=> {\r\n    getTasks(userId);\r\n  }, [userId]);\r\n  \r\n  const addTaskHandler = () => {\r\n    setViewState(2);\r\n  }\r\n\r\n  const closeModel = () => {\r\n    setViewState(0);\r\n    getTasks(userId);\r\n  }\r\n\r\n  const mainDisplay = () => {\r\n    if (viewState === 0) {\r\n      return <Loading />\r\n    } else if (viewState === 1) {\r\n      return taskList && taskList.length > 0 ?\r\n      taskList.map(task => {\r\n        return <TaskCard key={task._id} userId={userId} taskId={task._id} taskTitle={task.title} signUps={task.sign_up} />\r\n      }) :\r\n      <EmptyTasks addTask={addTaskHandler} />\r\n    } else {\r\n      return <CreateTask userId={userId} closeModel={closeModel} />\r\n    }\r\n  }\r\n  return (<div className=\"user-tasks\">\r\n    <div className=\"name-badge\">\r\n      <span className=\"profile\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\r\n        </svg>\r\n        <span>{userName}</span>\r\n      </span>\r\n      <span className=\"add-task-btn\" onClick={addTaskHandler}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n    <div className=\"tasks\">\r\n      {mainDisplay()}\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default UserTasks;","import React, {useState, useEffect} from 'react';\r\nimport UserTasks from './user-tasks';\r\n\r\nconst SignUpPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(()=> {\r\n    fetch('/api/users')\r\n    .then(res => res.json())\r\n    .then(users => {\r\n      users.sort((user1, user2) => user1.sort - user2.sort);\r\n      setUsers(users);\r\n    })\r\n  }, [])\r\n  return <div>\r\n    {\r\n      users.map(user => {\r\n        return <UserTasks key={user._id} userName={user.name} userId={user._id} />\r\n      })\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default SignUpPage;","import React from 'react';\r\nimport './empty-tasks.css';\r\n\r\nconst EmptyChart = () => {\r\n  return (\r\n    <div className=\"empty-tasks\">\r\n      <div className=\"message\">\r\n        <span>No task chart avaliable</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmptyChart;","import * as d3 from 'd3';\r\n\r\nexport const drawTask = (config, viewData) => {\r\n  /**\r\n   * viewData:\r\n   * [\r\n   *   {\r\n   *     name: string\r\n   *     data: number\r\n   *   }\r\n   * ]\r\n   */\r\n\r\n  const {containerId, width, height, margin} = config;\r\n  const svg = d3.select(containerId).append('svg').attr('width', width).attr('height', height);\r\n  const ch = height - margin.top - margin.bottom;\r\n  svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`).attr('class', 'chart-area');\r\n\r\n  svg.append('g')\r\n    .attr('class', 'x-axis')\r\n    .attr('transform', `translate(${margin.left}, ${margin.top + ch})`);\r\n\r\n  svg.append('g')\r\n    .attr('class', 'y-axis')\r\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n\r\n  updateTask(viewData, config, svg);\r\n\r\n  return svg;\r\n};\r\n\r\nexport const updateTask = (viewData, config, svg) => {\r\n  const names = viewData.map(vd => vd.name);\r\n  const {width, height, margin} = config;\r\n  const cw = width - margin.left - margin.right;\r\n  const ch = height - margin.top - margin.bottom;\r\n  const xScale = d3.scaleBand().domain(names).range([0, cw]).paddingInner(0.5).paddingOuter(0.5);\r\n  const yScale = d3.scaleLinear().domain([0, 1]).range([ch, 0]);\r\n  const t = svg.transition().duration(500);\r\n  const xAxisCall = d3.axisBottom(xScale);\r\n  const yAxisCall = d3.axisLeft(yScale).ticks(5).tickFormat(d => `${(d*100).toFixed(0)}%`);\r\n\r\n  svg.selectAll(\"g.y-axis\")\r\n    .call(yAxisCall)\r\n    .selectAll('text').attr('text-anchor', 'end');\r\n\r\n  svg.selectAll(\"g.x-axis\")\r\n    .call(xAxisCall)\r\n    .selectAll('text').attr('text-anchor', 'middle');;\r\n\r\n  const colorScale = d3.schemeCategory10;\r\n  \r\n  svg.selectAll('g.chart-area')\r\n    .selectAll('text')\r\n    .data(viewData, d => d)\r\n    .join(\r\n      enter => {\r\n        enter.append('text')\r\n        .text(d => `${(d.data*100).toFixed(2)}%`)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('fill', '#000000')\r\n        .attr('fill-opacity', 0)\r\n        .attr('x', d => xScale(d.name) + xScale.bandwidth() / 2)\r\n        .attr('y', ch)\r\n        .call(enter => enter.transition(t)\r\n          .attr('y', d => yScale(d.data)-10)\r\n          .attr('fill-opacity', 1)\r\n        );\r\n      },\r\n      update => {\r\n        update.text(d => `${(d.data*100).toFixed(2)}%`)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('fill', '#000000')\r\n        .attr('fill-opacity', 0)\r\n        .attr('x', d => xScale(d.name) + xScale.bandwidth() / 2)\r\n        .attr('y', ch)\r\n        .call(update => update.transition(t)\r\n          .attr('y', d => yScale(d.data)-10)\r\n          .attr('fill-opacity', 1)\r\n        );\r\n      },\r\n      exit => {\r\n        exit.call(exit => exit.transition(t)\r\n          .attr('fill-opacity', 0)\r\n          .attr('y', ch)\r\n          .remove()\r\n        );\r\n      }\r\n    );\r\n\r\n    svg.selectAll('g.chart-area')\r\n    .selectAll('rect')\r\n    .data(viewData, d => d)\r\n    .join(\r\n      enter => {\r\n        enter.append('rect')\r\n        .attr('fill', (d, i) => colorScale[i])\r\n        .attr('x', d => xScale(d.name))\r\n        .attr('y', ch)\r\n        .attr('width', xScale.bandwidth())\r\n        .attr('height', 0)\r\n        .attr('fill-opacity', 0)\r\n        .call(enter => enter.transition(t)\r\n          .attr('y', d => yScale(d.data))\r\n          .attr('height', d => ch - yScale(d.data))\r\n          .attr('fill-opacity', 1)\r\n        );\r\n      },\r\n      update => {\r\n        update.attr('fill', (d, i) => colorScale[i])\r\n        .attr('x', d => xScale(d.name))\r\n        .attr('y', ch)\r\n        .attr('width', xScale.bandwidth())\r\n        .attr('height', 0)\r\n        .attr('fill-opacity', 0)\r\n        .call(update => update.transition(t)\r\n          .attr('y', d => yScale(d.data))\r\n          .attr('height', d => ch - yScale(d.data))\r\n          .attr('fill-opacity', 1)\r\n        );\r\n      },\r\n      exit => {\r\n        exit.call(exit => exit.transition(t)\r\n          .attr('fill-opacity', 0)\r\n          .attr('height', 0)\r\n          .remove()\r\n        );\r\n      }\r\n    );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport { getSignUpRate } from '../utils/time';\r\nimport { drawTask, updateTask } from './charts/bar-chart';\r\nimport './task-chart.css';\r\n\r\nconst TaskChart = ({taskList, userId}) => {\r\n  const chartAreaId = `chart-area-${userId}`;\r\n  const [config, setConfig] = useState({});\r\n  const [svg, setSVG] = useState(null);\r\n  const chartRef = useRef(null);\r\n  useEffect(() => {\r\n    const chartE = chartRef.current;\r\n    getSignUpRate(taskList, 7);\r\n    const config = {\r\n      containerId: `#${chartAreaId}`, \r\n      width: chartE.clientWidth,\r\n      height: chartE.clientHeight, \r\n      margin: {left: 40, right: 40, top: 40, bottom: 40}\r\n    };\r\n    setConfig(config);\r\n    const svg = drawTask(config, taskList);\r\n    setSVG(svg);\r\n  }, []);\r\n  const selectChange = evt => {\r\n    const taskRange = parseInt(evt.target.value);\r\n    getSignUpRate(taskList, taskRange);\r\n    updateTask(taskList, config, svg);\r\n  }\r\n  return (\r\n    <div className=\"task-chart\" ref={chartRef}>\r\n      <div className=\"chart-option\">\r\n        <select onChange={selectChange}>\r\n          <option value=\"7\" selected>Last 7 days</option>\r\n          <option value=\"30\">Last 30 days</option>\r\n          <option value=\"120\">Last 120 days</option>\r\n          <option value=\"365\">Last 365 days</option>\r\n          <option value=\"-1\">All</option>\r\n        </select>\r\n      </div>\r\n      <div id={chartAreaId}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskChart;","import React, {useState, useEffect} from 'react';\r\nimport Loading from './loading';\r\nimport EmptyCharts from './empty-charts';\r\nimport './user-tasks.css';\r\nimport TaskChart from './task-chart';\r\n\r\nconst UserCharts = ({userName, userId}) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  // 0: loading, 1 show charts\r\n  const [viewState, setViewState] = useState(0);\r\n  const getTasks = (userId) => {\r\n    fetch(`/api/tasks?userId=${userId}`)\r\n    .then(res => res.json())\r\n    .then(tasks => {\r\n      setTaskList(tasks);\r\n      setViewState(1)\r\n    });\r\n  }\r\n  useEffect(()=> {\r\n    getTasks(userId);\r\n  }, [userId]);\r\n\r\n  const mainDisplay = () => {\r\n    if (viewState === 0) {\r\n      return <Loading />\r\n    } else {\r\n      return taskList && taskList.length > 0 ? <TaskChart taskList={taskList} userId={userId} /> : <EmptyCharts />\r\n    }\r\n  }\r\n  return (<div className=\"user-tasks\">\r\n    <div className=\"name-badge\">\r\n      <span className=\"profile\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\r\n        </svg>\r\n        <span>{userName}</span>\r\n      </span>\r\n    </div>\r\n    <div className=\"tasks\">\r\n      {mainDisplay()}\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default UserCharts;","import React, {useState, useEffect} from 'react';\r\nimport UserCharts from './user-charts';\r\n\r\nconst StatisticsPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(()=> {\r\n    fetch('/api/users')\r\n    .then(res => res.json())\r\n    .then(users => {\r\n      users.sort((user1, user2) => user1.sort - user2.sort);\r\n      setUsers(users);\r\n    })\r\n  }, [])\r\n  return <div>\r\n    {\r\n      users.map(user => {\r\n        return <UserCharts key={user._id} userName={user.name} userId={user._id} />\r\n      })\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default StatisticsPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport SignUpPage from './sign-up-page';\r\nimport StatisticsPage from './statistics-page';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={SignUpPage}/>\r\n        <Route path='/signup' component={SignUpPage}/>\r\n        <Route path='/statistics' component={StatisticsPage}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport PageHeader from './components/page-header';\nimport Main from './components/main';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <PageHeader />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}